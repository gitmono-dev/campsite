name: Deploy API
on:
  workflow_dispatch:
  workflow_call:

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  DEPLOY_QUEUE_THREAD_ID: suwdx19o6mqj
  RUBY_VERSION: 3.3.4
  NODE_VERSION: 23.10.0
  BUNDLER_VERSION: 2.6.5

jobs:
  deploy-api:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: GitHub App token
        id: gen-token
        uses: tibdex/github-app-token@v2.1.0
        with:
          app_id: 1157102
          private_key: ${{ secrets.DEPLOYBOT_TOKEN }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.gen-token.outputs.token }}

      - name: Set git info
        id: git-info
        run: .github/set-git-message


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
            # role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
            # role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
            # role-duration-seconds: 1200
            # role-session-name: MySessionName

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build, tag, and push docker image to Amazon ECR Public
        working-directory: api
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: m8q5m4u3
          REPOSITORY: mega
          IMAGE_TAG: campsite-0.1.0-pre-release
        run: |
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG . --build-arg RUBY_VERSION=${{env.RUBY_VERSION}} --build-arg NODE_VERSION=${{env.NODE_VERSION}} --build-arg BUNDLER_VERSION=${{env.BUNDLER_VERSION}}
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          
      # - name: Setup Fly
      #   uses: superfly/flyctl-actions/setup-flyctl@master
      # - name: Deploy API
      #   working-directory: api
      #   run: flyctl deploy --remote-only -e RELEASE_SHA=${{ github.sha }}

      # - name: Bump version and push tag
      #   id: tag
      #   uses: campsite/github-tag-action@master
      #   with:
      #     github_token: ${{ steps.gen-token.outputs.token }}
      #     tag_prefix: api-
      #     default_bump: major
      #     fetch_all_tags: true

      # - name: Notify success
      #   uses: campsite/campsite-github-action@v1.0.0
      #   with:
      #     api_key: ${{ secrets.CAMPBOT_API_KEY }}
      #     action_type: create_message
      #     thread_id: ${{ env.DEPLOY_QUEUE_THREAD_ID }}
      #     content: |
      #       **üõ§Ô∏è API deployed**
            
      #       [${{ github.actor }}](https://github.com/${{ github.actor }}) deployed ${{ steps.git-info.outputs.escaped-git-message }}
            
      #       [${{ steps.git-info.outputs.git-sha }}](https://github.com/campsite/campsite/commit/${{ github.sha }}) ¬∑ [Run logs](https://github.com/campsite/campsite/actions/runs/${{ github.run_id }})

      # - name: Notify failure
      #   if: ${{ failure() }}
      #   uses: campsite/campsite-github-action@v1.0.0
      #   with:
      #     api_key: ${{ secrets.CAMPBOT_API_KEY }}
      #     action_type: create_message
      #     thread_id: ${{ env.DEPLOY_QUEUE_THREAD_ID }}
      #     content: |
      #       **üö® API deploy failed!**
            
      #       [${{ github.actor }}](https://github.com/${{ github.actor }}) tried to deploy ${{ steps.git-info.outputs.escaped-git-message }}
            
      #       [${{ steps.git-info.outputs.git-sha }}](https://github.com/campsite/campsite/commit/${{ github.sha }}) ¬∑ [Run logs](https://github.com/campsite/campsite/actions/runs/${{ github.run_id }})
